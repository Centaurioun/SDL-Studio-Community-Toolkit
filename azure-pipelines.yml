# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Build
  displayName: 'Build Studio Community Toolkit'
  jobs:
  - job: Do_Build
    displayName: 'Do build'
    pool:
      name: Studio-OX
      demands:
      - msbuild
      - Agent.ComputerName -equals CLJVMOX2017A2
      - visualstudio
    steps:
    - task: NuGetToolInstaller@0
    - task: CmdLine@2
      inputs:
        script: |
          .\build.cmd BuildAndCreatePackages RELEASE
      
          displayName: 'Start building the BuildToolkit'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\packaging'
        ArtifactName: 'studio-toolkit-drop'
        publishLocation: 'Container'

- stage: Publish_Beta
  displayName: 'Publish beta version on private feed'
  jobs:
  - deployment: Publish_Beta
    displayName: 'Publish on azure internal devops feed'
    pool:
      vmImage: 'vs2017-win2016'
    environment: 'Azure DevOps feed'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: studio-toolkit-drop
          - task: NuGetCommand@2
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg;!$(Agent.BuildDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '7b173346-9ceb-4f8d-a243-d8a5e82731d0'
              allowPackageConflicts: true

- stage: Publish_Nuget
  displayName: 'Publish nuget packages'
  jobs:
  - deployment: Publish_Nuget
    displayName: 'Publish on azure external devops feed'
    pool:
      vmImage: 'vs2017-win2016'
    environment: 'Azure DevOps feed'
    strategy:
      runOnce:
        deploy:
          steps:
              - task: DownloadPackage@1
                inputs:
                  packageType: 'nuget'
                  feed: '/7b173346-9ceb-4f8d-a243-d8a5e82731d0'
                  view: '10a0b828-b017-4799-ab82-957ecf6e7eff'
                  definition: '8fec7b69-08fb-4c41-b1a4-6d4e90fbc321'
                  version: '1.8.0'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: DownloadPackage@1
                inputs:
                  packageType: 'nuget'
                  feed: '/7b173346-9ceb-4f8d-a243-d8a5e82731d0'
                  view: '10a0b828-b017-4799-ab82-957ecf6e7eff'
                  definition: 'e73b55df-b742-4f4e-9e21-8a547b37b934'
                  version: '1.8.0'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: DownloadPackage@1
                inputs:
                  packageType: 'nuget'
                  feed: '/7b173346-9ceb-4f8d-a243-d8a5e82731d0'
                  view: '10a0b828-b017-4799-ab82-957ecf6e7eff'
                  definition: '37e26f4c-4eff-41c1-b60c-951838dcae5a'
                  version: '1.8.0'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: DownloadPackage@1
                inputs:
                  packageType: 'nuget'
                  feed: '/7b173346-9ceb-4f8d-a243-d8a5e82731d0'
                  view: '10a0b828-b017-4799-ab82-957ecf6e7eff'
                  definition: 'aaa65e9d-8f0d-43fa-85ee-768e5503014c'
                  version: '1.8.0'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: DownloadPackage@1
                inputs:
                  packageType: 'nuget'
                  feed: '/7b173346-9ceb-4f8d-a243-d8a5e82731d0'
                  view: '10a0b828-b017-4799-ab82-957ecf6e7eff'
                  definition: 'c85feb94-0973-4013-b9a1-d52ba61007cc'
                  version: '1.8.0'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: NuGetCommand@2
                inputs:
                  command: 'push'
                  packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
                  nuGetFeedType: 'external'
                  publishFeedCredentials: 'Nuget'