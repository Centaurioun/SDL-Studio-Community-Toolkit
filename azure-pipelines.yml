
trigger:
- master

variables:
- name: StudioProductIdentifier
  value: 'studio17Beta'
#- group: 'SDLPLC Authenticode Credentials'

stages:
- stage: Build
  displayName: 'Build Studio Community Toolkit'
  jobs:
  - job: Do_Build
    displayName: 'Do build'
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: NuGetToolInstaller@0
    - task: PowerShell@2
      displayName: 'set x86path'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "##vso[task.setvariable variable=x86path;]${Env:ProgramFiles(x86)}"
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'specific'
        project: 'TradosStudio'
        definition: '1258'
        runversion: 'specific'
        RunId: '168665'
        artifactName: 'binaries'
        targetPath: '$(X86PATH)\Trados\Trados Studio\$(StudioProductIdentifier)'
      
    - task: CmdLine@2
      inputs:
        script: |
          .\build.cmd BuildAndCreatePackages RELEASE
      
          displayName: 'Start building the BuildToolkit'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\packaging'
        ArtifactName: 'studio-toolkit-drop'
        publishLocation: 'Container'

- stage: Publish_Beta
  displayName: 'Publish beta version on private feed'
  jobs:
  - deployment: Publish_Beta
    displayName: 'Publish on azure internal devops feed'
    pool:
      vmImage: 'windows-2019'
    environment: 'Azure DevOps feed'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: NuGetCommand@2
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg;!$(Agent.BuildDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '7b173346-9ceb-4f8d-a243-d8a5e82731d0'
              allowPackageConflicts: true

- stage: Publish_Nuget
  displayName: 'Publish nuget packages'
  jobs:
  - deployment: Publish_Nuget
    displayName: 'Publish on azure external devops feed'
    pool:
      vmImage: 'windows-2019'
    environment: 'Azure DevOps feed'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg;!$(Agent.BuildDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'Nuget'
              allowPackageConflicts: true
